version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: network_toolkit
      POSTGRES_USER: toolkit_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secure_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U toolkit_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_password}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  influxdb:
    image: influxdb:2.7-alpine
    environment:
      INFLUXDB_DB: network_metrics
      INFLUXDB_ADMIN_USER: admin
      INFLUXDB_ADMIN_PASSWORD: ${INFLUX_PASSWORD:-influx_password}
    volumes:
      - influxdb_data:/var/lib/influxdb2
    ports:
      - "8086:8086"

  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: toolkit
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-rabbitmq_password}
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  api-gateway:
    build:
      context: ./backend/api-gateway
      dockerfile: Dockerfile
    environment:
      NODE_ENV: production
      PORT: 3001
      JWT_SECRET: ${JWT_SECRET}
      DATABASE_URL: postgresql://toolkit_user:${DB_PASSWORD:-secure_password}@postgres:5432/network_toolkit
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis_password}@redis:6379
      RABBITMQ_URL: amqp://toolkit:${RABBITMQ_PASSWORD:-rabbitmq_password}@rabbitmq:5672
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
      - rabbitmq
    volumes:
      - ./backend/api-gateway:/app
      - /app/node_modules

  network-scanner:
    build:
      context: ./backend/network-scanner
      dockerfile: Dockerfile
    environment:
      RABBITMQ_URL: amqp://toolkit:${RABBITMQ_PASSWORD:-rabbitmq_password}@rabbitmq:5672
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis_password}@redis:6379
    depends_on:
      - rabbitmq
      - redis
    volumes:
      - ./backend/network-scanner:/app
    cap_add:
      - NET_RAW
      - NET_ADMIN

  syslog-service:
    build:
      context: ./backend/syslog-service
      dockerfile: Dockerfile
    environment:
      INFLUXDB_URL: http://influxdb:8086
      INFLUXDB_TOKEN: ${INFLUXDB_TOKEN}
    ports:
      - "514:514/udp"
      - "514:514/tcp"
    depends_on:
      - influxdb
    volumes:
      - ./backend/syslog-service:/app

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - api-gateway

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'

  grafana:
    image: grafana/grafana:latest
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - influxdb

volumes:
  postgres_data:
  redis_data:
  influxdb_data:
  rabbitmq_data:
  prometheus_data:
  grafana_data: